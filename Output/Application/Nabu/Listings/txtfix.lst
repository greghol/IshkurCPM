              	; --------------------------------------
              	; zasm: assemble "txtfix.asm"
              	; date: 2023-06-12 00:09:14
              	; --------------------------------------


              	; This program is designed to be loaded into memory, and catch stray jumps
              	; When a jump is caught, it will be reported to the operator
              	
              	; Equates
0005:         	bdos	equ	0x0005
005C:         	fcb	equ	0x005C
0080:         	dirent	equ	0x0080
              	
0001:         	b_coin	equ	0x01
0002:         	b_cout	equ	0x02
0009:         	b_print	equ	0x09
000F:         	b_open	equ	0x0F
0010:         	b_close	equ	0x10
0011:         	b_sfirs	equ	0x11
0012:         	b_snext	equ	0x12
0014:         	b_read	equ	0x14
0015:         	b_write	equ	0x15
0016:         	b_make	equ	0x16
001A:         	b_dma	equ	0x1A
              	
              	; Program start
0100:         		org	0x0100
              		
0100: 0E09    	start:	ld	c,b_print
0102: 114F01  		ld	de,splash
0105: CD0500  		call	bdos
              		
              		; Dump out all matching filenames into the heap
0108: 0E1A    		ld	c,b_dma
010A: 118000  		ld	de,dirent
010D: CD0500  		call	bdos
              		
0110: 0E11    		ld	c,b_sfirs
0112: 115C00  		ld	de,fcb
0115: CD0500  		call	bdos
              		
              		; If done, be done
0118: 06FF    	nextf:	ld	b,0xFF
011A: B8      		cp	b
011B: 2825    		jr	z,endlook
              		
              		; Calculate address of directory entry
011D: 218000  		ld	hl,dirent
0120: 112000  		ld	de,32
0123: B7      	gethl:	or	a
0124: 2804    		jr	z,gothl
0126: 3D      		dec	a
0127: 19      		add	hl,de
0128: 18F9    		jr	gethl
              	
              		; Now copy it to heap
012A: 23      	gothl:	inc	hl
012B: ED5BEA01		ld	de,(pointer)
012F: 010B00  		ld	bc,11
0132: EDB0    		ldir
0134: ED53EA01		ld	(pointer),de
              		
              		; Find next filename
0138: 0E12    		ld	c,b_snext
013A: 115C00  		ld	de,fcb
013D: CD0500  		call	bdos
0140: 18D6    		jr	nextf
              		
0142: ED5BEA01	endlook:ld	de,(pointer)
0146: AF      		xor	a
0147: 12      		ld	(de),a
0148: 21EC01  		ld	hl,heap
014B: 22EA01  		ld	(pointer),hl
              		
              		
014E: C9      		ret
              	
014F:         	splash:	
014F: 4953484B		defb	'ISHKUR/NFS TextFix Utiltiy$'
0153: 55522F4E	
0157: 46532054	
015B: 65787446	
015F: 69782055	
0163: 74696C74	
0167: 697924  	
016A:         	buffer:
016A: FFFFFFFF		defs	128
016E: FF...   	
01EA:         	pointer:
01EA: EC01    		defw	heap
01EC:         	heap:


; +++ segments +++

#CODE          = $0100 =   256,  size = $00EC =   236

; +++ global symbols +++

_end    = $01EC =   492          txtfix.asm:22 (unused)
_size   = $00EC =   236          txtfix.asm:22 (unused)
b_close = $0010 =    16          txtfix.asm:13 (unused)
b_coin  = $0001 =     1          txtfix.asm:9 (unused)
b_cout  = $0002 =     2          txtfix.asm:10 (unused)
b_dma   = $001A =    26          txtfix.asm:19
b_make  = $0016 =    22          txtfix.asm:18 (unused)
b_open  = $000F =    15          txtfix.asm:12 (unused)
b_print = $0009 =     9          txtfix.asm:11
b_read  = $0014 =    20          txtfix.asm:16 (unused)
b_sfirs = $0011 =    17          txtfix.asm:14
b_snext = $0012 =    18          txtfix.asm:15
b_write = $0015 =    21          txtfix.asm:17 (unused)
bdos    = $0005 =     5          txtfix.asm:5
buffer  = $016A =   362          txtfix.asm:75 (unused)
dirent  = $0080 =   128          txtfix.asm:7
endlook = $0142 =   322          txtfix.asm:64
fcb     = $005C =    92          txtfix.asm:6
gethl   = $0123 =   291          txtfix.asm:45
gothl   = $012A =   298          txtfix.asm:52
heap    = $01EC =   492          txtfix.asm:79
nextf   = $0118 =   280          txtfix.asm:38
pointer = $01EA =   490          txtfix.asm:77
splash  = $014F =   335          txtfix.asm:73
start   = $0100 =   256          txtfix.asm:24 (unused)


total time: 0.0020 sec.
no errors
