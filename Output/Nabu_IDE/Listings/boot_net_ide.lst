              	; --------------------------------------
              	; zasm: assemble "boot\boot_net_ide.asm"
              	; date: 2023-07-04 23:33:13
              	; --------------------------------------


              	;
              	;**************************************************************
              	;*
              	;*        I S H K U R   N E T B O O T   I D E
              	;*
              	;*    Reads the first 512 bytes of an IDE device 
              	;*    and jumps to it. Useful for testing an IDE
              	;*    device without a modified bootrom.
              	;*
              	;**************************************************************
              	;
              	
0006:         	nsec	equ	6		; # of BDOS+BIOS sectors 
              					; (1024 bytes each)
0037:         	mem	equ	55		; CP/M image starts at mem*1024
              					; Should be same as cpm22.asm
              					
0040:         	aydata	equ	0x40		; AY-3-8910 data port
0041:         	aylatc	equ	0x41		; AY-3-8910 latch port
              	
00C0:         	id_base	equ	0xC0		; IDE Base address
              	
              	
3000:         	scratch	equ	0x3000
              	; NABU bootstrap loads in at 0xB000
B000:         	entry	equ	0xB000 ; Bootloader entry address
              	
              	
              	
B000:         		org	entry
              	
B000: 00      		nop
B001: 00      		nop
B002: 00      		nop
B003:         	start:
B003: 310330  		ld sp, scratch + 3             ; Set stack pointer
B006: 3EC9    		ld a, $C9                      ; A = $C9 (return opcode)
B008: 320030  		ld (scratch), a                ; Place return statement at address 3000
B00B: CD0030  		call scratch                   ; Call address 3000 (and return)
B00E: 2A0130  		ld hl, (scratch + 1)           ; Load return address from stack, this will be the address immediately following the call 3000 statement
B011: 111300  		ld de, code_start-$ + 3        ; DE = address of bootloader relative to the call 0 return address
B014: 19      		add hl, de                     ; HL = absolute address where bootloader is currently residing
B015: 1100B0  		ld de, entry                   ; DE = address to copy bootloader to.
B018: 015E00  		ld bc, code_length             ; BC = length of bootloader
B01B: EDB0    		ldir                           ; Relocate ourselves to known address
B01D: 2100B0  		ld hl, entry                   ; HL = entry point of bootloader
B020: E9      		jp (hl)                        ; Jump to bootloader
              	
              	.PHASE entry
B021:         	code_start:  equ $$
              	
              	; Boot start same as NABU bootstrap
B000:         	base:
B021: F3      		di
B022: 00      		nop
B023: 3100B0  		ld	sp,base
              	
              		; Select master
B026: 3EE0    		ld	a,0xE0
B028: D3CC    		out	(id_base+0xC),a
B02A: 060A    		ld	b,10
B02C: CD59B0  		call	id_stal
              	
B02F: AF      		xor	a
B030: D3C6    		out	(id_base+0x6),a
B032: D3C8    		out	(id_base+0x8),a
B034: D3CA    		out	(id_base+0xA),a
B036: 3C      		inc	a
B037: D3C4    		out	(id_base+0x4),a
B039: 2100C0  		ld	hl,0xC000
              	
B03C: CD21B0  		call	id_rphy
B03F: C300C0  		jp	0xC000
              		
              	; Executes a read command
              	; hl = Destination of data
              	;
              	; Returns hl += 512
              	; uses: af, bc, d, hl
B042: CD4CB0  	id_rphy:call	id_busy
B045: 3E20    		ld	a,0x20
B047: CD44B0  		call	id_comm
B04A: CD3DB0  		call	id_wdrq
B04D: 1600    		ld	d,0
B04F: 0EC0    		ld	c,id_base
B051: EDA2    	id_rph0:ini
B053: 0C      		inc	c
B054: EDA2    		ini
B056: 0D      		dec	c
B057: 15      		dec	d
B058: 20F7    		jr	nz,id_rph0
B05A: CD4CB0  		call	id_busy
B05D: C9      		ret
              	
              	; Waits for a DRQ (Data Request)
              	;
              	; uses: af
B05E: DBCE    	id_wdrq:in	a,(id_base+0xE)
B060: CB5F    		bit	3,a
B062: 28FA    		jr	z,id_wdrq
B064: C9      		ret
              		
              	; Issues an IDE command
              	; a = Command to issue
              	;
              	; uses: af
B065: F5      	id_comm:push	af
B066: CD4CB0  		call	id_busy
B069: F1      		pop	af
B06A: D3CE    		out	(id_base+0xE),a
B06C: C9      		ret
              		
              		
              	; Waits for the IDE drive to no longer be busy
              	;
              	; Resets flag z on error
B06D: DBCE    	id_busy:in	a,(id_base+0xE)
B06F: CB77    		bit	6,a
B071: 28FA    		jr	z,id_busy
B073: CB7F    		bit	7,a
B075: 20F6    		jr	nz,id_busy
B077: CB47    		bit	0,a
B079: C9      		ret
              	
              	
              	; Waits a little bit
              	;
              	; uses: b
B07A: C5      	id_stal:push	bc
B07B: C1      		pop	bc
B07C: 10FC    		djnz	id_stal
B07E: C9      		ret
              		
              	
005E:         	code_length: equ $$-code_start
              	.DEPHASE


; +++ segments +++

#CODE          = $B000 = 45056,  size = $007F =   127

; +++ global symbols +++

_end        = $B07F = 45183          boot\boot_net_ide.asm:30 (unused)
_size       = $007F =   127          boot\boot_net_ide.asm:30 (unused)
aydata      = $0040 =    64          boot\boot_net_ide.asm:18 (unused)
aylatc      = $0041 =    65          boot\boot_net_ide.asm:19 (unused)
base        = $B000 = 45056          boot\boot_net_ide.asm:53
code_length = $005E =    94          boot\boot_net_ide.asm:135
code_start  = $B021 = 45089          boot\boot_net_ide.asm:50
entry       = $B000 = 45056          boot\boot_net_ide.asm:26
id_base     = $00C0 =   192          boot\boot_net_ide.asm:21
id_busy     = $B04C = 45132          boot\boot_net_ide.asm:117
id_comm     = $B044 = 45124          boot\boot_net_ide.asm:107
id_rph0     = $B030 = 45104          boot\boot_net_ide.asm:86
id_rphy     = $B021 = 45089          boot\boot_net_ide.asm:80
id_stal     = $B059 = 45145          boot\boot_net_ide.asm:129
id_wdrq     = $B03D = 45117          boot\boot_net_ide.asm:98
mem         = $0037 =    55          boot\boot_net_ide.asm:15 (unused)
nsec        = $0006 =     6          boot\boot_net_ide.asm:13 (unused)
scratch     = $3000 = 12288          boot\boot_net_ide.asm:24
start       = $B003 = 45059          boot\boot_net_ide.asm:35 (unused)


total time: 0.0022 sec.
no errors
