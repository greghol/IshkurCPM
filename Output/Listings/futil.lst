              	; --------------------------------------
              	; zasm: assemble "futil.asm"
              	; date: 2023-04-29 22:20:10
              	; --------------------------------------


              	;
              	;**************************************************************
              	;*
              	;*       N A B U   F D C   I M A G E   U T I L I T Y
              	;*
              	;*     This utility allows for floppy disk data to be
              	;*     directly interacted with by the user. Disks can
              	;*     be imaged, formatted, or re-imaged. Both RAW track
              	;*     dumps and IMG sector dumps are supported
              	;*
              	;**************************************************************
              	;
              	
              	; Equates
0005:         	bdos	equ	0x0005
005C:         	fcb	equ	0x005C
              	
0009:         	b_print	equ	0x09
              	
              	
              	; Program start
0100:         		org	0x0100
              		
              		
              		; Print banner
0100: 0E09    	start:	ld	c,b_print
0102: 117E01  		ld	de,splash
0105: CD0500  		call	bdos
              	
              	
              		; Get user profile
0108: 0E09    	getpro: ld	c,b_print
010A: 11B101  		ld	de,cfgmsg
010D: CD0500  		call	bdos
0110: CD6201  		call	getopt
              		
              		; Exit option
0113: FE39    		cp	'9'
0115: 280D    		jr	z,exit
              		
              		; Profile 1 (5.25 SSDD)
0117: 210004  		ld	hl,1024
011A: 1605    		ld	d,5
011C: 1E28    		ld	e,40
011E: FE31    		cp	'1'
0120: 2807    		jr	z,setpro
              	
              	
              		; Invalid, reprompt
0122: 18E4    		jr	getpro
              	
              		; Soft reboot
0124: 0E00    	exit:	ld	c,0x00
0126: C30500  		jp	bdos
              		
              		
              		; Set profile variables
0129: 327801  	setpro:	ld	(profile),a
012C: 227901  		ld	(seclen),hl
012F: 7A      		ld	a,d
0130: 327B01  		ld	(seccnt),a
0133: 7B      		ld	a,e
0134: 327C01  		ld	(trkcnt),a
              		
              		; Now lets get the logical drive #
0137: 0E09    	getcurd:ld	c,b_print
0139: 111602  		ld	de,drvmsg
013C: CD0500  		call	bdos
013F: CD6201  		call	getopt
              		
0142: 0602    		ld	b,2
0144: FE30    		cp	'0'
0146: 2808    		jr	z,setcurd
0148: 0604    		ld	b,4
014A: FE31    		cp	'1'
014C: 2802    		jr	z,setcurd
014E: 18E7    		jr	getcurd
              		
0150: 78      	setcurd:ld	a,b
0151: 327D01  		ld	(curdrv),a
              		
              		; Finally, we get the actual operation
0154: 0E09    		ld	c,b_print
0156: 113002  		ld	de,oprmsg
0159: CD0500  		call	bdos
015C: CD6201  		call	getopt
              		
015F: C32401  		jp	exit
              		
              	; Gets a single character option from the user
              	; Letters will be converted to upper case
              	;
              	; Returns character in A
              	; uses: all
0162: 0E0A    	getopt:	ld	c,0x0A
0164: 119302  		ld	de,inpbuf
0167: CD0500  		call	bdos
016A: 3A9502  		ld	a,(inpbuf+2)
              		
              	; Converts lowercase to uppercase
              	; a = Character to convert
              	;
              	; Returns uppercase in A
              	; uses: af
016D: E67F    	ltou:	and	0x7F
016F: FE61    		cp	0x61		; 'a'
0171: D8      		ret	c
0172: FE7B    		cp	0x7B		; '{'
0174: D0      		ret	nc
0175: D620    		sub	0x20
0177: C9      		ret
              		
              	; Variables
              	
0178:         	profile:
0178: 00      		defb	0x00
              		
0179:         	seclen:
0179: 0000    		defw	0x0000
              		
017B:         	seccnt:
017B: 00      		defb	0x00
              		
017C:         	trkcnt:
017C: 00      		defb	0x00
              		
017D:         	curdrv:
017D: 00      		defb	0x00
              		
              	; Strings
              		
017E:         	splash:
017E: 4E414255		defb	'NABU FDC Image Utility',0x0A,0x0D
0182: 20464443	
0186: 20496D61	
018A: 67652055	
018E: 74696C69	
0192: 74790A0D	
0196: 52657620		defb	'Rev 1a, tergav17 (Gavin)',0x0A,0x0D,'$'
019A: 31612C20	
019E: 74657267	
01A2: 61763137	
01A6: 20284761	
01AA: 76696E29	
01AE: 0A0D24  	
              	
01B1:         	cfgmsg:
01B1: 0A0D5365		defb	0x0A,0x0D,'Select a disk profile:',0x0A,0x0A,0x0D
01B5: 6C656374	
01B9: 20612064	
01BD: 69736B20	
01C1: 70726F66	
01C5: 696C653A	
01C9: 0A0A0D  	
              		
01CC: 20202020		defb	'    1: NABU 5.25 SSDD (Len=1024, Sec=5, Track=40)',0x0A,0x0D
01D0: 313A204E	
01D4: 41425520	
01D8: 352E3235	
01DC: 20535344	
01E0: 4420284C	
01E4: 656E3D31	
01E8: 3032342C	
01EC: 20536563	
01F0: 3D352C20	
01F4: 54726163	
01F8: 6B3D3430	
01FC: 290A0D  	
01FF: 20202020		defb	'    9: Exit',0x0A,0x0A,0x0D
0203: 393A2045	
0207: 7869740A	
020B: 0A0D    	
020D: 4F707469		defb	'Option: $'
0211: 6F6E3A20	
0215: 24      	
              		
              		
0216:         	drvmsg:	
0216: 0A0D4C6F		defb	0x0A,0x0D,'Logical Drive # (0,1): $'
021A: 67696361	
021E: 6C204472	
0222: 69766520	
0226: 23202830	
022A: 2C31293A	
022E: 2024    	
              		
0230:         	oprmsg:	
0230: 0A0D436F		defb	0x0A,0x0D,'Command ([R]ead, [W]rite, [F]ormat): $'
0234: 6D6D616E	
0238: 6420285B	
023C: 525D6561	
0240: 642C205B	
0244: 575D7269	
0248: 74652C20	
024C: 5B465D6F	
0250: 726D6174	
0254: 293A2024	
              		
0258:         	formsg:	
0258: 0A0D496D		defb	0x0A,0x0D,'Image format (.[R]AW,.[I]MG): $'
025C: 61676520	
0260: 666F726D	
0264: 61742028	
0268: 2E5B525D	
026C: 41572C2E	
0270: 5B495D4D	
0274: 47293A20	
0278: 24      	
              		
0279:         	readymsg:	
0279: 0A0D5265		defb	0x0A,0x0D,'Ready to begin? (Y,N): $'
027D: 61647920	
0281: 746F2062	
0285: 6567696E	
0289: 3F202859	
028D: 2C4E293A	
0291: 2024    	
              	
              		
              	; Input buffer
0293: 02000000	inpbuf:	defb	0x02, 0x00, 0x00, 0x00
              		
              	; Top of program, use it to store stuff
0297:         	top:


; +++ segments +++

#CODE          = $0100 =   256,  size = $0197 =   407

; +++ global symbols +++

_end     = $0297 =   663          futil.asm:22 (unused)
_size    = $0197 =   407          futil.asm:22 (unused)
b_print  = $0009 =     9          futil.asm:18
bdos     = $0005 =     5          futil.asm:15
cfgmsg   = $01B1 =   433          futil.asm:136
curdrv   = $017D =   381          futil.asm:127
drvmsg   = $0216 =   534          futil.asm:144
exit     = $0124 =   292          futil.asm:53
fcb      = $005C =    92          futil.asm:16 (unused)
formsg   = $0258 =   600          futil.asm:150 (unused)
getcurd  = $0137 =   311          futil.asm:66
getopt   = $0162 =   354          futil.asm:95
getpro   = $0108 =   264          futil.asm:32
inpbuf   = $0293 =   659          futil.asm:158
ltou     = $016D =   365          futil.asm:105 (unused)
oprmsg   = $0230 =   560          futil.asm:147
profile  = $0178 =   376          futil.asm:115
readymsg = $0279 =   633          futil.asm:153 (unused)
seccnt   = $017B =   379          futil.asm:121
seclen   = $0179 =   377          futil.asm:118
setcurd  = $0150 =   336          futil.asm:79
setpro   = $0129 =   297          futil.asm:58
splash   = $017E =   382          futil.asm:132
start    = $0100 =   256          futil.asm:26 (unused)
top      = $0297 =   663          futil.asm:161 (unused)
trkcnt   = $017C =   380          futil.asm:124


total time: 0.0022 sec.
no errors
